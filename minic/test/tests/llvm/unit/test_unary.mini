fun printBool(bool b, bool nl) void
{
    if (b) {
        if (nl) {
            print 1 endl;
        } else {
            print 1;
        }

    } else {
        if (nl) {
            print 0 endl;
        } else {
            print 0;
        }
    }
}

# Expected output
# !c: 1 0 1 0 1 0
# !x: 1 0 1 0 1 0
# -c: 0 0 1 -1 2 -2 1 2
# -x: 0 -1 1 -2 2
# !binary: 1 0 0 0 1 0 1 1 1 1 1 0 0 0 1
# -binary: -1 -1 1 1 2 -2 -1 1 -1 -1 1 1 2 0

fun main() int
{
    bool a, b;
    int i, j;

    # !c: 1 0 1 0 1 0
    b = true;
    printBool(b, false);
    b = !true;
    printBool(b, false);
    b = !!true;
    printBool(b, false);
    b = false;
    printBool(b, false);
    b = !false;
    printBool(b, false);
    b = !!false;
    printBool(b, true);

    # !x: 1 0 1 0 1 0
    b = true;
    printBool(b, false);
    b = !b;
    printBool(b, false);
    b = !b;
    printBool(b, false);
    b = false;
    printBool(b, false);
    b = !b;
    printBool(b, false);
    b = !b;
    printBool(b, true);


    # -c: 0 0 1 -1 2 -2 1 2
    i = 0;
    print i;
    i = -0;
    print i;
    i = 1;
    print i;
    i = -1;
    print i;
    i = 2;
    print i;
    i = -2;
    print i;
    i = --1;
    print i;
    i = --2;
    print i endl;

    # -x: 0 -1 1 -2 2
    i = 0;
    i = -i;
    print i;
    i = 1;
    print -i;
    print --i;
    i = 2;
    print -i;
    print --i endl;

    # !binary: 1 0 0 0 1 0 1 1 1 1 1 0 0 0 1
    a = true;
    b = true;
    printBool(a && b, false);
    printBool(a && !b, false);
    printBool(!a && b, false);
    printBool(!a && !b, false);
    printBool(!(!a && !b), false);
    printBool(!a || !b, false);
    printBool(!(!a || !b), false);
    printBool(a || !b, false);
    printBool(!a || b, false);
    printBool(a || b, false);
    printBool(a && b, false);
    printBool(!(a || b), false);
    printBool(!(a && b), false);
    printBool(!a || (!a && !b), false);
    printBool(a || (!a && !b), true);



    # -binary: -1 -1 1 1 2 -2 -1 1 -1 -1 1 1 2 0
    i = 0;
    j = 1;
    print i + -j;
    print -j + i;
    print i - -j;
    print j - -i;
    i = 1;
    print i - -j;
    print -j - i;
    print i * -j;
    print -j * -i;
    print -i / j;
    print -j / i;
    print -i / -j;
    print -i / -j;
    print (-j + -i) / -j;
    print -j + -i / -j endl;

    return 0;
}

